require "shellfish/ui";

Dialog {
    id: dialog

    title: "Settings"

    into buttons Button {
        marginLeft: theme.paddingSmall
        text: "Close"
        onClick: () => { dialog.parent = null; }
    }

    onInitialization: () =>
    {
        thisContentArea.width = 640;
        thisContentArea.height = 480;
    }

    Box {
        id: box

        fillWidth: true
        fillHeight: true

        layout: "row"

        // categories selector
        Box {
            width: theme.itemWidthLarge
            //height: 300
            fillHeight: true
            color: theme.contentBackgroundColor
            borderColor: theme.borderColor
            borderWidth: 1

            ListView {
                id: listView

                fillWidth: true
                fillHeight: true
                cellWidth: bbox.width
                cellHeight: theme.itemHeightMedium

                property currentIndex: 0

                model: ListModel {
                    data: [
                        { title: "Server", icon: "comm-world", panel: "ServerSettings.shui" },
                        { title: "Users", icon: "comm-group", panel: "UsersSettings.shui" }
                    ]
                }

                delegate: template MouseBox {
                    property selected: modelData.index === listView.currentIndex

                    color: selected ? theme.highlightBackgroundColor
                                    : "transparent"

                    layout: "center-row"

                    onInitialization: () =>
                    {
                        if (modelData.index === listView.currentIndex)
                        {
                            setupLoader.source = __dirname + "/" + modelData.value.panel;
                        }
                    }

                    onClick: (ev) =>
                    {
                        listView.currentIndex = modelData.index;
                        setupLoader.source = __dirname + "/" + modelData.value.panel;
                        ev.accepted = true;
                    }

                    Label {
                        marginLeft: theme.paddingSmall
                        color: parent.selected ? theme.highlightColor
                                               : theme.primaryColor
                        fontSize: parent.bboxHeight * 0.8
                        text: "[icon:" + parent.modelData.value.icon + "]"
                    }

                    Label {
                        marginLeft: theme.paddingSmall
                        fillWidth: true
                        color: parent.selected ? theme.highlightColor
                                               : theme.primaryColor
                        text: parent.modelData.value.title
                    }
                }
            }
        }


        Box {
            marginLeft: theme.paddingMedium
            fillWidth: true
            fillHeight: true

            Loader {
                id: setupLoader

                fillWidth: true
                fillHeight: true
            }
        }
    }
}
