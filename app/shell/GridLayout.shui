require "shellfish/ui";

Box {

    property items: []

    function update()
    {
        items = children().slice(2);
        const vitems = items.filter(c => c.visible);
        const amount = vitems.length;

        let cols = Math.ceil(Math.sqrt(amount));
        let rows = Math.ceil(amount / cols);

        if (bbox.width < bbox.height)
        {
            const tmp = rows;
            rows = cols;
            cols = tmp;
        }

        let cx = 0;
        let cy = 0;
        let cw = bbox.width / cols;
        let ch = bbox.height / rows;
        let col = 0;

        //console.log("amount: " + amount + ", cols: " + cols + ", rows: " + rows);
        //console.log("cw: " + cw + ", ch: " + ch);

        vitems.forEach((item, idx) =>
        {
            if (idx === (rows - 1) * cols)
            {
                // last row begins
                cw = bbox.width / (amount - idx);
            }

            item.position = "free";
            item.fillWidth = false;
            item.fillHeight = false;
            //console.log("cx: " + cx + ", cy: " + cy);
            item.x = cx + 1;
            item.y = cy + 1;
            item.width = cw - 2;
            item.height = ch - 2;
            cx += cw;
            ++col;
            if (col >= cols)
            {
                cx = 0;
                cy += ch;
                col = 0;
            }
        });
    }

    onBboxChanged: () => { update(); }
    onChildrenChanged: () => { wait(100).then(() => { update(); }); }
}