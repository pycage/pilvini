require "shellfish/server";

HTTPSession {

    property registry: null

    onRequest: ev =>
    {
        if (! registry?.ready)
        {
            response(500, "Server Not Ready")
            .send();
            return;
        }

        if (ev.method === "GET")
        {
            const key = ev.url.parameters.key;
            console.log("Get Registry Key: " + key);

            const value = registry.read(key);
            if (value !== undefined)
            {
                console.log("-> " + JSON.stringify(value));
                response(200, "OK")
                .body(JSON.stringify(value), "application/json")
                .send();
            }
            else
            {
                response(404, "Not Found")
                .send();
            }

        }
        else if (ev.method === "POST")
        {
            const key = ev.url.parameters.key;
            console.log("Set Registry Key: " + key);

            ev.body()
            .then(data =>
            {
                registry.write(key, JSON.parse(data));
                response(200, "OK")
                .send();
            })
            .catch(err =>
            {
                log("Config", "error", "" + err);
                response(500, "Internal Error")
                .send();
            });
        }
        else if (ev.method === "DELETE")
        {
            const key = ev.url.parameters.key;
            console.log("Delete Registry Key: " + key);

            registry.remove(key);
            response(200, "OK")
            .send();
        }
        else
        {
            response(403, "Not Authorized")
            .send();
        }
    }
}
